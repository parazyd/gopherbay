#!/usr/bin/env python3
# Beerware License, parazyd <parazyd@dyne.org>

from json import loads
from sys import argv
from time import strftime, gmtime
from urllib.parse import quote
from os.path import basename
from requests import get

from config import server, categories, btc, xmr


def print_boat():
    print('''
                                 .                   .
                              _..-''"""\          _.--'"""\\
                              |         L         |        \\
                  _           / _.-.---.\.        / .-.----.\\
                _/-|---     _/<"---'"""""\\\\`.    /-'--''"""""\\
               |       \     |            L`.`-. |            L
               /_.-.---.L    |            \  \  `|            J`.
             _/--'""""  \    F            \L  \  |             L
               L      `. L  J  _.---.-"""-.\`. L_/ _.--|"""""--.\ `.
               |        \+. /-"__.--'""""   \ `./'"---'""""""   \`. `.
               F   _____ \ `F"        `.     \  \                L `.
              /.-'"_|---'"\ |           `    JL |                 L  `.`.
             <-'""         \|    _.-.------._ A J    _.-.-----`.--|   ``.`.
              L         `. |/.-'"_.-`---'""\."| /-'"---'"""""   \`.\.  \ `.`.
              |  _.------\.<'"""            L\ L\                `.`\`. \  `.
         _.-'//'"--'"""   L\|       ________\ `.F     ___.-------._L \ `-\   \`.
        /___| F             F _.--'"_|-------L  /_.-'"_.-|-'"""""""\  L   L   `.`.
            | F  _.-'|"""""/'"-'"""          J <'"""                L J   |     `.`.
            |/-'-''/|""\ )-|\                 F \                   |  L .'"""`\\""-\\\\_
             F`-'-'-(`-')  | \                F  \                  |___`"""`.""`.-'"
------------/        `-'---|  F               L   L             __     |"""""`-'"__________
          .'_         |    |__L          __  J__  |    _.--'""""   `".----'".'
         '""""""""""""|--._+--F _.-'""||"   """___/.-'"   ||-'"/""""" \_. .'
         J------------(___\__/'_____.--------'-------'""""""""           /
         `-.                                        _.__.__.__.____     J_.-._
    .'`-._ (-`--`---.'--._`---._.-'`-._.-'_.-'``-._'               `-''-'


                           === The Gopher Bay ===

''')


def print_size(size):
    if size >= 2**50: return "%.2f PiB" % (size/(2**50))
    if size >= 2**40: return "%.2f TiB" % (size/(2**40))
    if size >= 2**30: return "%.2f GiB" % (size/(2**30))
    if size >= 2**20: return "%.2f MiB" % (size/(2**20))
    if size >= 2**10: return "%.2f KiB" % (size/(2**10))
    return "%s B"


def print_category(cat):
    c = categories.get(cat)
    if not c: return "n/a"
    mc = str(cat)[0] + "00"
    mc = categories.get(int(mc))
    if not mc: return c
    return "%s > %s" % (mc, c)


def print_all_categories(top100=False, recent=False):
    if top100:
        print("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=[ Browse Top100 ]-=-=-=-=-=--=-=-=-=-=-=-=-=-=-=-")
    else:
        print("-=-=-=-=-=-=-=-=-=-=-=-=-=-=[ Browse Categories ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")

    if top100 and not recent:
        print("[1|Total Top100|/q.dcgi?top100:all|server|port]")
    elif top100 and recent:
        print("[1|Total Top100 (48h)|/q.dcgi?top100:recent|server|port]")

    for i in categories:
        if i % 100 == 0:
            print()
            if i == 100:
                print("-=-[ Audio ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-")
            elif i == 200:
                print("-=-[ Video ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-")
            elif i == 300:
                print("-=-[ Applications ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
            elif i == 400:
                print("-=-[ Games ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-")
            elif i == 500:
                print("-=-[ Porn ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
            elif i == 600:
                print("-=-[ Other ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-")
        if top100 and not recent:
            print("[1|%s|/q.dcgi?%s:%d|server|port]" % (categories[i], "top100", i))
        elif top100 and recent:
            print("[1|%s (48h)|/q.dcgi?%s_%d|server|port]" % (categories[i], "top100:recent", i))
        else:
            print("[1|%s|/q.dcgi?%s:%d|server|port]" % (categories[i], "category", i))


def print_magnet(ihash, name):
    return "magnet:?xt=urn:btih:%s&dn%s%s" % (ihash, quote(name), print_trackers())


def print_trackers():
    trs = "&tr=".join((
        quote("udp://tracker.coppersurfer.tk:6969/announce"),
        quote("udp://9.rarbg.me:2850/announce"),
        quote("udp://9.rarbg.to:2920/announce"),
        quote("udp://tracker.opentrackr.org:1337"),
        quote("udp://tracker.leechers-paradise.org:6969/announce")))
    return "&tr=%s" % trs


def httpget(url):
    r = get(url)
    return r.text


def q(_argv):
    query = _argv[1] if _argv[1] else _argv[2]

    if query[0:10] == "top100:all":
        data = httpget(server + "/precompiled/data_top100_all.json")
    elif query[0:14] == "top100:recent_":
        data = httpget(server + "/precompiled/data_top100_48h_" + query[14:] + ".json")
    elif query[0:13] == "top100:recent":
        data = httpget(server + "/precompiled/data_top100_recent.json")
    elif query[0:7] == "top100:":
        data = httpget(server + "/precompiled/data_top100_" + query[7:] + ".json")
    else:
        data = httpget(server + "/q.php?q=" + quote(query))

    if not data:
        print("Internal error")
        return

    jsondata = loads(data)

    print("\n-=-[ Search Results ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n")

    for i in jsondata:
        name = i.get("name")
        seeders = int(i.get("seeders"))
        leechers = int(i.get("leechers"))
        files = int(i.get("num_files"))
        size = print_size(int(i.get("size")))
        time = strftime("%Y-%m-%d %H:%M:%S", gmtime(int(i.get("added"))))
        category_name = print_category(int(i.get("category")))
        category = int(i.get("category"))
        username = i.get("username")
        status = i.get("status")
        ih = i.get("info_hash")
        magnet = print_magnet(i["info_hash"], quote(i["name"]))

        print("\nName: %s" % name)
        print("Seeders: %d | Leechers: %d | Files: %d | Size: %s" % (seeders, leechers, files, size))
        print("Uploaded: %s" % time)
        print("[1|Category: %s|/q.dcgi?category:%d|server|port]" % (category_name, category))
        print("[1|Uploader: %s (%s)|/q.dcgi?user:%s|server|port]" % (username, status, username))
        print("[h|Magnet Link: %s|URL:%s|server|port]" % (ih, magnet))


def print_index():
    print("-=-[ Pirate Search ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=")
    print("[7|Search torrents|/q.dcgi?|server|port]")
    print("[1|Browse torrents|/browse.dcgi|server|port]")
    print("[1|Recent torrents|/q.dcgi?top100:recent|server|port]")
    print("[1|Top 100|/top.dcgi|server|port]")
    print("[1|Top 100 (48h)|/top48.dcgi|server|port]")
    print("\n-=-[ About ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-")
    print("[h|Donate BTC: %s|URL:bitcoin:%s|server|port]" % (btc, btc))
    print("[h|Donate XMR: %s|URL:monero:%s|server|port]\n" % (xmr, xmr))


if __name__ == "__main__":
    if basename(argv[0]) == "index.dcgi":
        print_boat()
        print_index()
    elif basename(argv[0]) == "q.dcgi":
        print_boat()
        q(argv)
    elif basename(argv[0]) == "top.dcgi":
        print_boat()
        print_all_categories(top100=True)
    elif basename(argv[0]) == "top48.dcgi":
        print_boat()
        print_all_categories(top100=True, recent=True)
    elif basename(argv[0]) == "browse.dcgi":
        print_boat()
        print_all_categories()
    else:
        print("Internal error.")
