#!/usr/bin/env python3
# Beerware License, parazyd <parazyd@dyne.org>

from syslog import syslog
from collections import OrderedDict
from json import loads
from sys import argv
from urllib.parse import quote
from os.path import basename
from requests import get

from config import server, categories, btc

def print_boat():
    print('''
                                 .                   .
                              _..-''"""\          _.--'"""\\
                              |         L         |        \\
                  _           / _.-.---.\.        / .-.----.\\
                _/-|---     _/<"---'"""""\\\\`.    /-'--''"""""\\
               |       \     |            L`.`-. |            L
               /_.-.---.L    |            \  \  `|            J`.
             _/--'""""  \    F            \L  \  |             L
               L      `. L  J  _.---.-"""-.\`. L_/ _.--|"""""--.\ `.
               |        \+. /-"__.--'""""   \ `./'"---'""""""   \`. `.
               F   _____ \ `F"        `.     \  \                L `.
              /.-'"_|---'"\ |           `    JL |                 L  `.`.
             <-'""         \|    _.-.------._ A J    _.-.-----`.--|   ``.`.
              L         `. |/.-'"_.-`---'""\."| /-'"---'"""""   \`.\.  \ `.`.
              |  _.------\.<'"""            L\ L\                `.`\`. \  `.
         _.-'//'"--'"""   L\|       ________\ `.F     ___.-------._L \ `-\   \`.
        /___| F             F _.--'"_|-------L  /_.-'"_.-|-'"""""""\  L   L   `.`.
            | F  _.-'|"""""/'"-'"""          J <'"""                L J   |     `.`.
            |/-'-''/|""\ )-|\                 F \                   |  L .'"""`\\""-\\\\_
             F`-'-'-(`-')  | \                F  \                  |___`"""`.""`.-'"
------------/        `-'---|  F               L   L             __     |"""""`-'"__________
          .'_         |    |__L          __  J__  |    _.--'""""   `".----'".'
         '""""""""""""|--._+--F _.-'""||"   """___/.-'"   ||-'"/""""" \_. .'
         J------------(___\__/'_____.--------'-------'""""""""           /
         `-.                                        _.__.__.__.____     J_.-._
    .'`-._ (-`--`---.'--._`---._.-'`-._.-'_.-'``-._'               `-''-'


                           === The Gopher Bay ===

''')

def print_size(size):
    if size >= 2**50: return "%.2f PiB" % (size/(2**50))
    if size >= 2**40: return "%.2f TiB" % (size/(2**40))
    if size >= 2**30: return "%.2f GiB" % (size/(2**30))
    if size >= 2**20: return "%.2f MiB" % (size/(2**20))
    if size >= 2**10: return "%.2f KiB" % (size/(2**10))
    return "%s B"

def print_category(cat):
    c = categories.get(cat)
    if not c: return "n/a"
    mc = str(cat)[0] + "00"
    mc = categories.get(int(mc))
    if not mc: return c
    return "%s > %s" % (mc, c)

def print_all_categories(top100=False):
    if top100:
        print("-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=[ Browse Top100 ]-=-=-=-=-=--=-=-=-=-=-=-=-=-=-=-")
    else:
        print("-=-=-=-=-=-=-=-=-=-=-=-=-=-=[ Browse Categories ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
    print()

    if top100:
        print("[1|Total Top100|/q.dcgi?top100:all|server|port]")

    for i in categories:
        if i % 100 == 0:
            print()
            if i == 100:
                print("-=-[ Audio ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-")
            elif i == 200:
                print("-=-[ Video ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-")
            elif i == 300:
                print("-=-[ Applications ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
            elif i == 400:
                print("-=-[ Games ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-")
            elif i == 500:
                print("-=-[ Porn ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
            elif i == 600:
                print("-=-[ Other ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-")
        print("[1|%s|/q.dcgi?%s:%d|server|port]" % (categories[i],
                            "top100" if top100 else "category", i))

def print_magnet(ihash, name):
    return "magnet:?xt=urn:btih:%s&dn%s%s" % (ihash, quote(name), print_trackers())

def print_trackers():
    trs = "&tr=".join((
        quote("udp://tracker.coppersurfer.tk:6969/announce"),
        quote("udp://9.rarbg.me:2850/announce"),
        quote("udp://9.rarbg.to:2920/announce"),
        quote("udp://tracker.opentrackr.org:1337"),
        quote("udp://tracker.leechers-paradise.org:6969/announce")))
    return "&tr=%s" % trs

def httpget(url):
    r = get(url)
    return r.text

def q(_argv):
    query = _argv[1] if _argv[1] else _argv[2]

    if query[0:10] == "top100:all":
        data = httpget(server + "/precompiled/data_top100_all.json")
    elif query[0:14] == "top100:recent_":
        data = httpget(server + "/precompiled/data_top100_recent_" + query[14:] + ".json")
    elif query[0:13] == "top100:recent":
        data = httpget(server + "/precompiled/data_top100_recent.json")
    elif query[0:7] == "top100:":
        data = httpget(server + "/precompiled/data_top100_" + query[7:] + ".json")
    else:
        data = httpget(server + "/q.php?q=" + quote(query))

    jsondata = loads(data)

    print()
    print("-=-[ Search Results ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=")
    print()

    for i in jsondata:
        magnet = print_magnet(i["info_hash"], quote(i["name"]))

        print("Name: %s" % (i["name"]))
        print("Seeders: %s | Leechers: %s | Files: %d | Size: %s" %
            (i["seeders"], i["leechers"], int(i["num_files"]),
            print_size(int(i["size"]))))
        print("[1|Category: %s|/q.dcgi?category:%d|server|port]" %
            (print_category(int(i["category"])), int(i["category"])))
        print("[1|Uploader: %s (%s)|/q.dcgi?user:%s|server|port]" %
            (i["username"], i["status"], i["username"]))
        print("[h|Magnet Link: %s|URL:%s|server|port]" % (i["info_hash"], magnet))
        print()

def print_index():
    print("-=-[ Pirate Search ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=--=-=-=")
    print("[7|Search torrents|/q.dcgi?|server|port]")
    print("[1|Browse torrents|/browse.dcgi|server|port]")
    print("[1|Recent torrents|/q.dcgi?top100:recent|server|port]")
    print("[1|Top 100|/top.dcgi|server|port]")
    print()
    print("-=-[ About ]-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-")
    print("[h|Donate BTC: %s|URL:bitcoin:%s|server|port]" % (btc, btc))
    print()


if __name__ == "__main__":
    if basename(argv[0]) == "index.dcgi":
        print_boat()
        print_index()
    elif basename(argv[0]) == "q.dcgi":
        q(argv)
    elif basename(argv[0]) == "top.dcgi":
        print_boat()
        print_all_categories(top100=True)
    elif basename(argv[0]) == "browse.dcgi":
        print_boat()
        print_all_categories()
    else:
        print("Internal error.")
